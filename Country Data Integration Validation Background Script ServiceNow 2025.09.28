/****************************************************************************************
* SCRIPT: Komplet Validering af Country Integration (v2.4 - Finpudset Rapport)
* Form√•l: Tjekker alle komponenter og genererer en letl√¶selig, sektioneret
* rapport med ikoner og pr√¶cise meddelelser.
****************************************************************************************/
(function() {
    var finalReport = {
        user: [],
        scriptInclude: [],
        data: [],
        syncJob: [],
        monitorJob: [],
        errors: 0,
        warnings: 0
    };

    function addSuccess(section, msg) { finalReport[section].push('‚úÖ ' + msg); }
    function addError(section, msg) { finalReport[section].push('‚ùå ' + msg); finalReport.errors++; }
    function addWarning(section, msg) { finalReport[section].push('‚ö†Ô∏è ' + msg); finalReport.warnings++; }
    function addInfo(section, msg) { finalReport[section].push('‚ÑπÔ∏è ' + msg); }

    // === 1. Tjek af Bruger, V√¶rdier, Roller og Grupper ===
    var userGR = new GlideRecord('sys_user');
    if (userGR.get('user_name', 'integration.countries')) {
        addSuccess('user', 'Bruger "integration.countries" fundet.');
        if (userGR.web_service_access_only == true) { addSuccess('user', 'V√¶rdi: "Web service access only" er korrekt (true).'); } else { addError('user', 'V√¶rdi: "Web service access only" er FORKERT (skulle v√¶re true).'); }
        if (userGR.internal_integration_user == true) { addSuccess('user', 'V√¶rdi: "Internal integration user" er korrekt (true).'); } else { addError('user', 'V√¶rdi: "Internal integration user" er FORKERT (skulle v√¶re true).'); }
        if (userGR.source == 'Integration: REST Countries API (Scripted)') { addSuccess('user', 'V√¶rdi: "Source" er korrekt.'); } else { addError('user', 'V√¶rdi: "Source" er FORKERT.'); }
        if (userGR.notification == 2) { addSuccess('user', 'V√¶rdi: "Notification" er korrekt (Disable).'); } else { addError('user', 'V√¶rdi: "Notification" er FORKERT.'); }
        if (gs.nil(userGR.edu_status)) { addSuccess('user', 'V√¶rdi: "edu_status" er korrekt (tom).'); } else { addError('user', 'V√¶rdi: "edu_status" er FORKERT (skulle v√¶re tom).'); }

        var expectedRoles = ['rest_service', 'personalize_choices'];
        var toleratedRoles = ['snc_internal', 'snc_required_script_writer_permission'];
        var foundRoles = [], unexpectedRoles = [], missingRoles = expectedRoles.slice();
        var userRolesGR = new GlideRecord('sys_user_has_role');
        userRolesGR.addQuery('user', userGR.getUniqueValue());
        userRolesGR.query();
        while (userRolesGR.next()) {
            var roleName = userRolesGR.getDisplayValue('role');
            foundRoles.push(roleName);
            var missingIndex = missingRoles.indexOf(roleName);
            if (missingIndex > -1) { missingRoles.splice(missingIndex, 1); }
            if (expectedRoles.indexOf(roleName) === -1 && toleratedRoles.indexOf(roleName) === -1) { unexpectedRoles.push(roleName); }
        }
        if (missingRoles.length === 0) { addSuccess('user', 'Rettigheder: De 2 n√∏dvendige roller er tildelt.'); } else { addError('user', 'Rettigheder: Mangler roller: ' + missingRoles.join(', ')); }
        addInfo('user', 'Total antal roller fundet: ' + foundRoles.length + ' (' + foundRoles.join(', ') + ')');
        if (unexpectedRoles.length > 0) { addWarning('user', 'Brugeren har uventede roller: ' + unexpectedRoles.join(', ')); }

        var toleratedGroups = ['Conditional Script Writer'];
        var foundGroups = [], unexpectedGroups = [];
        var userGroupsGR = new GlideRecord('sys_user_grmember');
        userGroupsGR.addQuery('user', userGR.getUniqueValue());
        userGroupsGR.query();
        while(userGroupsGR.next()) {
            var groupName = userGroupsGR.getDisplayValue('group');
            foundGroups.push(groupName);
            if (toleratedGroups.indexOf(groupName) === -1) { unexpectedGroups.push(groupName); }
        }
        addInfo('user', 'Total antal grupper fundet: ' + foundGroups.length + ' (' + (foundGroups.join(', ') || 'Ingen') + ')');
        if (unexpectedGroups.length > 0) { addWarning('user', 'Brugeren er medlem af uventede grupper: ' + unexpectedGroups.join(', ')); }

    } else {
        addError('user', 'Bruger "integration.countries" blev IKKE fundet.');
    }

    // === 2. Tjek af Script Include ===
    var siGR = new GlideRecord('sys_script_include');
    if (siGR.get('name', 'CountryIntegration')) {
        addSuccess('scriptInclude', 'Script Include "CountryIntegration" fundet.');
        if (siGR.active == true) { addSuccess('scriptInclude', 'Script Include er aktivt.'); } else { addError('scriptInclude', 'Script Include er IKKE aktivt.'); }
    } else {
        addError('scriptInclude', 'Script Include "CountryIntegration" blev IKKE fundet.');
    }

    // === 3. Tjek af Lande-data ===
    var choiceAgg = new GlideAggregate('sys_choice');
    choiceAgg.addQuery('name', 'cmn_location');
    choiceAgg.addQuery('element', 'country');
    choiceAgg.addAggregate('COUNT');
    choiceAgg.query();
    var choiceCount = 0;
    if (choiceAgg.next()) { choiceCount = choiceAgg.getAggregate('COUNT'); }
    if (choiceCount > 200) { addSuccess('data', 'Der blev fundet ' + choiceCount + ' lande i valglisten.'); } else { addError('data', 'Der blev fundet f√¶rre end 200 lande (Antal: ' + choiceCount + ').'); }

    // === 4. Tjek af Synkroniseringsjob ===
    var syncJobGR = new GlideRecord('sysauto_script');
    if (syncJobGR.get('name', 'Country Data Nightly Sync')) {
        addSuccess('syncJob', 'Job "Country Data Nightly Sync" fundet.');
        if (syncJobGR.active == true) { addSuccess('syncJob', 'Synkroniseringsjob er aktivt.'); } else { addError('syncJob', 'Synkroniseringsjob er IKKE aktivt.'); }
        if (syncJobGR.run_as.getRefRecord().user_name == 'integration.countries') { addSuccess('syncJob', 'K√∏rer som korrekt bruger.'); } else { addError('syncJob', 'K√∏rer som FORKERT bruger.'); }
        if (syncJobGR.run_dayofweek == 6) { addSuccess('syncJob', 'Er sat til l√∏rdag.'); } else { addError('syncJob', 'Er sat til FORKERT ugedag.'); }
    } else {
        addError('syncJob', 'Job "Country Data Nightly Sync" blev IKKE fundet.');
    }

    // === 5. Tjek af Overv√•gningsjob ===
    var monitorJobGR = new GlideRecord('sysauto_script');
    if (monitorJobGR.get('name', 'Country Data Consistency Check')) {
        addSuccess('monitorJob', 'Job "Country Data Consistency Check" fundet.');
        if (monitorJobGR.active == true) { addSuccess('monitorJob', 'Overv√•gningsjob er aktivt.'); } else { addError('monitorJob', 'Overv√•gningsjob er IKKE aktivt.'); }
        if (monitorJobGR.run_as.getRefRecord().user_name == 'integration.countries') { addSuccess('monitorJob', 'K√∏rer som korrekt bruger.'); } else { addError('monitorJob', 'K√∏rer som FORKERT bruger.'); }
        if (monitorJobGR.run_dayofweek == 1) { addSuccess('monitorJob', 'Er sat til mandag.'); } else { addError('monitorJob', 'Er sat til FORKERT ugedag.'); }
    } else {
        addError('monitorJob', 'Job "Country Data Consistency Check" blev IKKE fundet.');
    }

    // === PRINT FINAL RAPPORT ===
    function printSection(icon, title, sectionName) {
        gs.info('\n' + icon + ' ' + title);
        var sectionMessages = finalReport[sectionName];
        if (sectionMessages.length === 0) {
            gs.info('  (Ingen tjek udf√∏rt for denne sektion)');
        } else {
            for (var i = 0; i < sectionMessages.length; i++) {
                var msg = '  ' + sectionMessages[i];
                if (msg.indexOf('‚ùå') > -1) { gs.error(msg); }
                else if (msg.indexOf('‚ö†Ô∏è') > -1) { gs.warn(msg); }
                else { gs.info(msg); }
            }
        }
    }

    gs.info('\n\n\n===========================================================');
    gs.info('    RAPPORT FOR COUNTRY INTEGRATION INSTALLATION');
    gs.info('===========================================================');
    
    printSection('üë§', 'BRUGER (integration.countries)', 'user');
    printSection('üìú', 'SCRIPT INCLUDE (CountryIntegration)', 'scriptInclude');
    printSection('üåç', 'DATA (Lande i valglisten)', 'data');
    printSection('‚öôÔ∏è', 'JOB (Ugentlig Synkronisering)', 'syncJob');
    printSection('‚è∞', 'JOB (Ugentlig Overv√•gning)', 'monitorJob');

    gs.info('\n-------------------- OPSUMMERING --------------------');
    if (finalReport.errors > 0) {
        gs.error('‚ùå KONKLUSION: Installationen er IKKE korrekt. Der blev fundet ' + finalReport.errors + ' fejl.');
    } else if (finalReport.warnings > 0) {
        gs.warn('‚úÖ KONKLUSION: Installationen virker, men der blev fundet ' + finalReport.warnings + ' advarsler (OBS-punkter), som b√∏r gennemg√•s.');
    } else {
        gs.info('üéâ KONKLUSION: Perfekt! Installationen er fuldt ud valideret og er 100% korrekt.');
    }
    gs.info('===========================================================');

})();
